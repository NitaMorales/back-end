import os
import json
from flask import Flask, request, jsonify
from flask_cors import CORS
import openai

app = Flask(__name__)

# Allow CORS only for your Netlify frontend
CORS(app, resources={
    r"/generate-definition": {"origins": "https://gregarious-custard-a60b6a.netlify.app"},
    r"/": {"origins": "https://gregarious-custard-a60b6a.netlify.app"}
}, supports_credentials=True)

# Read OpenAI API Key from environment variable
openai.api_key = os.environ.get("OPENAI_API_KEY")

@app.route("/")
def home():
    return "üöÄ Backend is live and ready!"

@app.route("/generate-definition", methods=["POST"])
def generate_definition():
    data = request.get_json()
    word = data.get("word", "").strip()

    if not word:
        return jsonify({"error": "No se proporcion√≥ ninguna palabra"}), 400

    # Prompt with Franny Choi-style reference
    prompt = f"""
Eres una poeta que escribe definiciones de palabras en un estilo evocador, similar al de Franny Choi. Aqu√≠ tienes ejemplos de su estilo:

ESTRELLA
Significado
brillante; antigua herida que sigo hasta casa
V√©ase tambi√©n 
chispa; extra√±o; escritura; aguij√≥n
Origen
mito; 
historias de una madre; asuntos est√°ticos
Sue√±os de ser
alcanzado

FANTASMA
Significado
contorno del silencio
V√©ase tambi√©n 
sombra; fotograf√≠a; zumbido
Origen
todas las cosas engendran sus propios opuestos
Sue√±os de ser
relleno, o carne

BOCA
Significado
una entrada o una salida
V√©ase tambi√©n 
pez; babosa; pu√±o; bazofia; cualquier sin√≥nimo de por favor
Origen
¬øqu√© vino primero, la espada de la herida?
Sue√±os de ser
el mar

MAR
Significado
fr√≠o antepasado; √∫tero sin sangre
V√©ase tambi√©n 
canci√≥n del coraz√≥n; canci√≥n del enjambre; canci√≥n de la sal; devorador de canciones
Origen
N/A
Sue√±os de ser
N/A (no sue√±a, solo se imagina)

Ahora, siguiendo este estilo, genera una definici√≥n po√©tica para la palabra '{word}' en el siguiente formato:

{{
  "significado": "...",
  "vease": "...",
  "origen": "...",
  "suenos": "..."
}}

Devuelve √∫nicamente el JSON en este formato, sin ning√∫n texto adicional.
    """

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": prompt}],
            max_tokens=300,
            temperature=0.8
        )

        raw_text = response.choices[0].message.content.strip()

        # Debugging: Print OpenAI raw response
        print("üî• OpenAI Raw Response:", raw_text)

        # Try parsing the response as JSON
        try:
            definition_json = json.loads(raw_text)
        except json.JSONDecodeError:
            print("üö® OpenAI returned an invalid JSON:", raw_text)
            return jsonify({
                "error": "OpenAI did not return valid JSON.",
                "raw": raw_text
            }), 500

        return jsonify(definition_json)

    except Exception as e:
        print("üî• ERROR:", str(e))  # This will appear in Render logs
        return jsonify({"error": str(e)}), 500

if __name__ == "__main__":
    app.run(debug=True)